<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.liweidan</groupId>
    <artifactId>ci-demo</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>spring-cloud-server</module>
    </modules>


    <properties>
        <!-- spring.cloud.version -->
        <spring-cloud.version>Camden.SR4</spring-cloud.version>
        <spring-boot.version>1.4.3.RELEASE</spring-boot.version>

        <!-- common.library.version -->
        <lombok.version>1.16.18</lombok.version>
        <junit.version>4.12</junit.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-lang3.version>3.4</commons-lang3.version>
        <commons-collections.version>3.2.1</commons-collections.version>
        <jackson-databind.version>2.8.9</jackson-databind.version>
        <javax.persistence.version>2.1.1</javax.persistence.version>
        <javax.validation.api.version>1.1.0.Final</javax.validation.api.version>
        <hibernate.validator.version>5.2.4.Final</hibernate.validator.version>
        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>
        <jedis.version>2.9.0</jedis.version>
        <orika-core.version>1.4.5</orika-core.version>
        <slf4j-api.version>1.7.25</slf4j-api.version>
        <alibaba.druid.version>1.0.18</alibaba.druid.version>
        <springboot.mybatis.version>1.3.1</springboot.mybatis.version>
        <springboot.log4j.version>1.3.8.RELEASE</springboot.log4j.version>
        <springboot.swagger.version>2.6.1</springboot.swagger.version>
        <commons-io.version>1.3.2</commons-io.version>
        <commons-codec.version>1.9</commons-codec.version>
        <guava.version>23.1-jre</guava.version>
        <json-lib.version>2.1</json-lib.version>
        <commons-beanutils.version>1.7.0</commons-beanutils.version>

        <!-- third.library.version -->
        <PageHelper.version>5.1.1</PageHelper.version>
        <tkmybatis.version>3.4.3</tkmybatis.version>

        <!-- solr -->
        <spring-data-solr.verions>3.0.1.RELEASE</spring-data-solr.verions>

        <!-- plugins.version -->
        <jdk.version>1.8</jdk.version>
        <encoding>UTF-8</encoding>
        <mvn.resources.version>2.6</mvn.resources.version>
        <mvn.compiler.version>3.2</mvn.compiler.version>
        <spring-boot.mvn.version>1.3.5.RELEASE</spring-boot.mvn.version>

    </properties>

    <!-- 这里是用于发布公司自己开发的框架包或者工具包需要配置的远程仓库地址 -->
    <!-- 如果所在公司需要使用到自己开发的一些jar包，则需要配置好远程仓库以及maven仓库等等 -->
    <!--<distributionManagement>-->
        <!--<repository>-->
            <!--&lt;!&ndash;这里面的名字要跟 setting.xml 文件中 servers 里面的一致&ndash;&gt;-->
            <!--&lt;!&ndash;这个是 release 库的发布地址&ndash;&gt;-->
            <!--<id>releases</id>-->
            <!--<name>Nexus Release Repository</name>-->
            <!--<url>http://192.168.1.249:8081/nexus/content/repositories/releases/</url>-->
        <!--</repository>-->
        <!--<snapshotRepository>-->
            <!--&lt;!&ndash;这里面的名字要跟 setting.xml 文件中 servers 里面的一致&ndash;&gt;-->
            <!--&lt;!&ndash;这个是 snapshot 库的发布地址&ndash;&gt;-->
            <!--<id>Snapshots</id>-->
            <!--<name>Nexus Snapshot Repository</name>-->
            <!--<url>http://192.168.1.249:8081/nexus/content/repositories/snapshots/</url>-->
        <!--</snapshotRepository>-->
    <!--</distributionManagement>-->

    <dependencyManagement>

        <dependencies>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- common-library -->

            <!-- 用于注解Getter&Setter的依赖 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- junit测试 -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- commons-lang -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <!-- commons-collections -->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>

            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
            </dependency>

            <!-- javax.persistence注解 -->
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>javax.persistence</artifactId>
                <version>${javax.persistence.version}</version>
            </dependency>

            <!-- valid annotation -->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax.validation.api.version}</version>
            </dependency>

            <!-- hibernate validator -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
            </dependency>

            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>

            <dependency>
                <groupId>ma.glasnost.orika</groupId>
                <artifactId>orika-core</artifactId>
                <version>${orika-core.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>

            <!-- Apache工具组件 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>

            <!-- 加密解密 -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>



            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>


            <!-- third.library -->

            <!-- tkmybatis -->
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper</artifactId>
                <version>${tkmybatis.version}</version>
            </dependency>

            <!-- PageHelper -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${PageHelper.version}</version>
            </dependency>

            <!-- druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${alibaba.druid.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${springboot.mybatis.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j</artifactId>
                <version>${springboot.log4j.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springboot.swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springboot.swagger.version}</version>
            </dependency>

            <!-- net.st.json-lib -->
            <dependency>
                <groupId>net.sf.json-lib</groupId>
                <artifactId>json-lib</artifactId>
                <version>${json-lib.version}</version>
                <classifier>jdk15</classifier>
            </dependency>
            <!-- json-lib依赖 -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>


        <!-- Apache工具组件 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- 资源文件拷贝插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${mvn.resources.version}</version>
                <configuration>
                    <encoding>${encoding}</encoding>
                </configuration>
            </plugin>
            <!-- java编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mvn.compiler.version}</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <encoding>${encoding}</encoding>
                    <!-- 解决压缩工具编译不通过 -->
                    <compilerArguments>
                        <verbose/>
                        <bootclasspath>${java.home}/lib/rt.jar</bootclasspath>
                    </compilerArguments>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${mvn.compiler.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.mvn.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>


</project>